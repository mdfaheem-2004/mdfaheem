import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Generate sample data
np.random.seed(42)
x = np.random.rand(100, 1) * 10
y = 2.5 * x + 5 + np.random.randn(100, 1)

# Visualize data
plt.scatter(x, y, color='blue', label='Data Points')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.show()

# Model training
model = LinearRegression()
model.fit(x, y)

# Predictions
y_pred = model.predict(x)

# Plot the regression line
plt.scatter(x, y, color='blue', label='Data Points')
plt.plot(x, y_pred, color='red', label='Regression Line')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.show()

# Model evaluation
mse = mean_squared_error(y, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'Slope (Coefficient): {model.coef_[0][0]}')
print(f'Intercept: {model.intercept_[0]}')
